
from numpy import array, mean, cov
from numpy import transpose as tr 
from numpy import linalg as la

y1 = array([[1.11, 2.569, 3.58, 0.760,], [1.19, 2.928, 3.75, 0.821,], [1.09, 2.865, 3.93, 0.928,], [1.25, 3.844, 3.94, 1.009,], [1.11, 3.027, 3.60, 0.766,], [1.08, 2.336, 3.51, 0.726,], [1.11, 3.211, 3.98, 1.209,], [1.16, 3.037, 3.62, 0.750,],])

y2 = array([[1.05, 2.074, 4.09, 1.036,], [1.17, 2.885, 4.06, 1.094,], [1.11, 3.378, 4.87, 1.635,], [1.25, 3.906, 4.98, 1.517,], [1.17, 2.782, 4.38, 1.197,], [1.15, 3.018, 4.65, 1.244,], [1.17, 3.383, 4.69, 1.495,], [1.19, 3.447,  4.4, 1.026,],])

y3 = array([[1.07, 2.505, 3.76, 0.912,], [0.99, 2.315, 4.44, 1.398,], [1.06, 2.667, 4.38, 1.197,], [1.02, 2.39, 4.67, 1.613,], [1.15, 3.021, 4.48, 1.476,], [1.2, 3.085, 4.78, 1.571,], [1.2, 3.308, 4.57, 1.506,], [1.17, 3.231, 4.56, 1.458,],])

y4 = array([[1.22, 2.838, 3.89, 0.944,], [1.03, 2.351, 4.05, 1.241,], [1.14, 3.001, 4.05, 1.241,], [1.01, 2.439, 3.92, 1.067,], [0.99, 2.199, 3.27, 0.693,], [1.11, 3.318, 3.95, 1.085,], [1.20, 3.601, 4.27, 1.242,], [1.08, 3.291, 3.85, 1.017,],])

y5 = array([[0.91, 1.532, 4.04, 1.084,], [1.15, 2.552, 4.16, 1.151,], [1.14, 3.083, 4.79, 1.381,], [1.05, 2.33, 4.42, 1.242,], [0.99, 2.079, 3.47, 0.673,], [1.22, 3.366, 4.41, 1.137,], [1.05, 2.416, 4.64, 1.455,], [1.13, 3.1, 4.57, 1.325,],])

y6 = array([[1.11, 2.813, 3.76, 0.8,], [0.75, 0.84, 3.14, 0.606,], [1.05, 2.199, 3.75, 0.79,], [1.02, 2.132, 3.99, 0.853,], [1.05, 1.949, 3.34, 0.610,], [1.07, 2.251, 3.21, 0.562,], [1.13, 3.064, 3.63, 0.707,], [1.11, 2.469, 3.95, 0.952,],])

K = 6
N = 8

def H():
      """
      
      """
      
      # yVarArray = array([[mean(y1)], [mean(y2)], [mean(y3)], [mean(y4)], [mean(y5)], [mean(y6)],])
      yVarArray = []
      for i in range(0, 4):
            A = []
            a = 0
            b = 0
            c = 0
            d = 0
            e = 0
            f = 0
            for j in range(0, 8):
                  a += y1[j][i]
                  sum1 = a / 8
                  

                  b += y2[j][i]
                  sum2 = b / 8
                  

                  c += y3[j][i]
                  sum3 = c / 8
                  

                  d += y4[j][i]
                  sum4 = d / 8
                  

                  e += y5[j][i]
                  sum5 = e / 8
                  

                  f += y6[j][i]
                  sum6 = f / 8
                  
            A.append(sum1)
            A.append(sum2)
            A.append(sum3)
            A.append(sum4)
            A.append(sum5)
            A.append(sum6)


            yVarArray.append(A)
      H = cov(yVarArray) * (K-1) * N 
      
      return H

def E():
      """
      
      """

      E1 = cov(tr(y1)) + cov(tr(y2)) + cov(tr(y3)) + cov(tr(y4)) + cov(tr(y5)) + cov(tr(y6))
      
      E = E1 * (N-1)

      return array(E)

# print(H())
# print(E())


Lambda = la.det(E()) / (la.det(E()+ H()))

print(Lambda)